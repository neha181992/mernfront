{"ast":null,"code":"var _jsxFileName = \"/Users/jatinmitruka/Downloads/Crowd-Funding-Application-master/frontend/src/Context/userState.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport UserContext from \"./userContext\";\nimport axios from \"../Axios/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserState = props => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [alert, setAlert] = useState(null);\n  const [startups, setStartups] = useState([]);\n  const [startupData, setStartupData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [orderAmount, setOrderAmount] = useState(0);\n  const [userStartup, setUserStartup] = useState([]);\n  const [investmentData, setInvestmentData] = useState([]);\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n\n  let showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    getUserStartups();\n    getUserData();\n  }, []); // payment Gateway\n\n  const loadRazorpay = () => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n\n    script.onerror = () => {\n      showAlert(\"Razorpay SDK failed to load. Are you online?\");\n    };\n\n    script.onload = async () => {\n      try {\n        setLoading(true);\n        const result = await axios.post(\"/api/investor/create-order\", {\n          amount: orderAmount * 100\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"auth-token\": localStorage.getItem(\"token\")\n          }\n        });\n        const {\n          amount,\n          id: order_id,\n          currency\n        } = result.data.order;\n        const {\n          data: {\n            key: razorpayKey\n          }\n        } = await axios.get(\"/api/investor/get-razorpay-key\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"auth-token\": localStorage.getItem(\"token\")\n          }\n        });\n        const options = {\n          key: razorpayKey,\n          amount: amount.toString(),\n          currency: currency,\n          name: \"example name\",\n          description: \"example transaction\",\n          order_id: order_id,\n          handler: async function (response) {\n            const result = await axios.post(\"/api/investor/pay-order\", {\n              amount: amount / 100,\n              razorpayPaymentId: response.razorpay_payment_id,\n              razorpayOrderId: response.razorpay_order_id,\n              razorpaySignature: response.razorpay_signature,\n              investor_id: user._id,\n              startup_id: startupData._id\n            }, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"auth-token\": localStorage.getItem(\"token\")\n              }\n            });\n\n            if (result.data.success) {\n              showAlert(result.data.msg, \"success\");\n              setPaymentSuccess(true);\n            }\n          },\n          prefill: {\n            name: \"example name\",\n            email: \"email@example.com\",\n            contact: \"111111\"\n          },\n          notes: {\n            address: \"example address\"\n          },\n          theme: {\n            color: \"#80c0f0\"\n          }\n        };\n        setLoading(false);\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n      } catch (err) {\n        showAlert(err);\n        setLoading(false);\n      }\n    };\n\n    document.body.appendChild(script);\n  };\n\n  const getInvestmentData = async () => {\n    const response = await axios.get(\"/api/investor/getTransactions\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    }).catch(error => {\n      console.log(error.response.data.msg);\n    });\n\n    if (response.data.success) {\n      setInvestmentData(response.data.data);\n    }\n  };\n\n  const getUserData = async () => {\n    const response = await axios.get(`/api/auth/getuser`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    }).catch(error => {\n      console.log(error.response.data.error);\n    });\n    setUser(response.data.data);\n  };\n\n  const getStartups = async () => {\n    const response = await axios.get(`/api/investor/fetch-startups`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n\n    if (response.data.success) {\n      setStartups(response.data.data);\n    }\n  }; // for Startups DashBoard\n\n\n  const getUserStartups = async () => {\n    const response = await axios.get(`/api/investor/fetchuserStartups`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n\n    if (response.data.success) {\n      setUserStartup(response.data.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      getUserData,\n      alert,\n      showAlert,\n      setStartups,\n      startups,\n      getStartups,\n      setStartupData,\n      startupData,\n      loadRazorpay,\n      setOrderAmount,\n      orderAmount,\n      getUserStartups,\n      userStartup,\n      getInvestmentData,\n      investmentData,\n      paymentSuccess,\n      setPaymentSuccess\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserState, \"+D++bYqgDlz8yaHVG1NKSahw22E=\");\n\n_c = UserState;\nexport default UserState;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserState\");","map":{"version":3,"sources":["/Users/jatinmitruka/Downloads/Crowd-Funding-Application-master/frontend/src/Context/userState.js"],"names":["useState","useEffect","UserContext","axios","UserState","props","user","setUser","alert","setAlert","startups","setStartups","startupData","setStartupData","loading","setLoading","orderAmount","setOrderAmount","userStartup","setUserStartup","investmentData","setInvestmentData","paymentSuccess","setPaymentSuccess","showAlert","message","type","setTimeout","getUserStartups","getUserData","loadRazorpay","script","document","createElement","src","onerror","onload","result","post","amount","headers","localStorage","getItem","id","order_id","currency","data","order","key","razorpayKey","get","options","toString","name","description","handler","response","razorpayPaymentId","razorpay_payment_id","razorpayOrderId","razorpay_order_id","razorpaySignature","razorpay_signature","investor_id","_id","startup_id","success","msg","prefill","email","contact","notes","address","theme","color","paymentObject","window","Razorpay","open","err","body","appendChild","getInvestmentData","catch","error","console","log","getStartups","children"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport UserContext from \"./userContext\";\nimport axios from \"../Axios/axios\";\nconst UserState = (props) => {\n  const [user, setUser] = useState(null);\n  const [alert, setAlert] = useState(null);\n  const [startups, setStartups] = useState([]);\n  const [startupData, setStartupData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [orderAmount, setOrderAmount] = useState(0);\n  const [userStartup, setUserStartup] = useState([]);\n  const [investmentData, setInvestmentData] = useState([]);\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  let showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  useEffect(() => {\n    getUserStartups();\n    getUserData();\n  }, []);\n\n  // payment Gateway\n  const loadRazorpay = () => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n    script.onerror = () => {\n      showAlert(\"Razorpay SDK failed to load. Are you online?\");\n    };\n    script.onload = async () => {\n      try {\n        setLoading(true);\n        const result = await axios.post(\n          \"/api/investor/create-order\",\n          {\n            amount: orderAmount * 100,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"auth-token\": localStorage.getItem(\"token\"),\n            },\n          }\n        );\n        const { amount, id: order_id, currency } = result.data.order;\n        const {\n          data: { key: razorpayKey },\n        } = await axios.get(\"/api/investor/get-razorpay-key\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        });\n\n        const options = {\n          key: razorpayKey,\n          amount: amount.toString(),\n          currency: currency,\n          name: \"example name\",\n          description: \"example transaction\",\n          order_id: order_id,\n          handler: async function (response) {\n            const result = await axios.post(\n              \"/api/investor/pay-order\",\n              {\n                amount: amount / 100,\n                razorpayPaymentId: response.razorpay_payment_id,\n                razorpayOrderId: response.razorpay_order_id,\n                razorpaySignature: response.razorpay_signature,\n                investor_id: user._id,\n                startup_id: startupData._id,\n              },\n              {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"auth-token\": localStorage.getItem(\"token\"),\n                },\n              }\n            );\n            if (result.data.success) {\n              showAlert(result.data.msg, \"success\");\n              setPaymentSuccess(true);\n            }\n          },\n          prefill: {\n            name: \"example name\",\n            email: \"email@example.com\",\n            contact: \"111111\",\n          },\n          notes: {\n            address: \"example address\",\n          },\n          theme: {\n            color: \"#80c0f0\",\n          },\n        };\n        setLoading(false);\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n      } catch (err) {\n        showAlert(err);\n        setLoading(false);\n      }\n    };\n    document.body.appendChild(script);\n  };\n\n  const getInvestmentData = async () => {\n    const response = await axios\n      .get(\"/api/investor/getTransactions\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .catch((error) => {\n        console.log(error.response.data.msg);\n      });\n    if (response.data.success) {\n      setInvestmentData(response.data.data);\n    }\n  };\n\n  const getUserData = async () => {\n    const response = await axios\n      .get(`/api/auth/getuser`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n      });\n    setUser(response.data.data);\n  };\n  const getStartups = async () => {\n    const response = await axios.get(`/api/investor/fetch-startups`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    if (response.data.success) {\n      setStartups(response.data.data);\n    }\n  };\n  // for Startups DashBoard\n  const getUserStartups = async () => {\n    const response = await axios.get(`/api/investor/fetchuserStartups`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    if (response.data.success) {\n      setUserStartup(response.data.data);\n    }\n  };\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        setUser,\n        getUserData,\n        alert,\n        showAlert,\n        setStartups,\n        startups,\n        getStartups,\n        setStartupData,\n        startupData,\n        loadRazorpay,\n        setOrderAmount,\n        orderAmount,\n        getUserStartups,\n        userStartup,\n        getInvestmentData,\n        investmentData,\n        paymentSuccess,\n        setPaymentSuccess,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\nexport default UserState;\n"]},"metadata":{},"sourceType":"module"}