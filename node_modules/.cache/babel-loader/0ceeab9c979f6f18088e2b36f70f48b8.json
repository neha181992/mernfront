{"ast":null,"code":"var _jsxFileName = \"/Users/jatinmitruka/Downloads/Crowd-Funding-Application-master/frontend/src/components/Dashboard/Product.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Product.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport ProductCard from \"./ProductCard\";\nimport axios from \"../../Axios/axios\";\nimport UserContext from \"../../Context/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Product = () => {\n  _s();\n\n  const param = useParams();\n  const context = useContext(UserContext);\n  const {\n    setStartupData,\n    loadRazorpay,\n    startupData\n  } = context;\n  const navigate = useNavigate();\n  useEffect(() => {\n    // getUserData();\n    if (!localStorage.getItem(\"token\")) {\n      navigate(\"/login\");\n    }\n\n    const fetchStartupsData = async () => {\n      try {\n        const response = await axios.post(`/api/investor/fetch-startup`, {\n          startup_id: param.id\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        if (response.data.success) {\n          setStartupData(response.data.data);\n        }\n      } catch (error) {\n        console.log(error);\n        navigate(\"*\");\n      }\n    };\n\n    fetchStartupsData();\n  }, [param.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), startupData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ProductCard, {\n        data: startupData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(Product, \"zoHmiOYDkHeRNaV8NIXo1OxA9Yw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/jatinmitruka/Downloads/Crowd-Funding-Application-master/frontend/src/components/Dashboard/Product.js"],"names":["React","useEffect","useState","useContext","useNavigate","useParams","DashboardNavbar","ProductCard","axios","UserContext","Product","param","context","setStartupData","loadRazorpay","startupData","navigate","localStorage","getItem","fetchStartupsData","response","post","startup_id","id","headers","data","success","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,KAAK,GAAGN,SAAS,EAAvB;AACA,QAAMO,OAAO,GAAGT,UAAU,CAACM,WAAD,CAA1B;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA;AAAhC,MAAgDH,OAAtD;AACA,QAAMI,QAAQ,GAAGZ,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACgB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClCF,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;;AACD,UAAMG,iBAAiB,GAAG,YAAY;AACpC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CACpB,6BADoB,EAErB;AAAEC,UAAAA,UAAU,EAAEX,KAAK,CAACY;AAApB,SAFqB,EAGrB;AACEC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AADX,SAHqB,CAAvB;;AAUA,YAAIJ,QAAQ,CAACK,IAAT,CAAcC,OAAlB,EAA2B;AACzBb,UAAAA,cAAc,CAACO,QAAQ,CAACK,IAAT,CAAcA,IAAf,CAAd;AACD;AACF,OAdD,CAcE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAX,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AACF,KAnBD;;AAoBAG,IAAAA,iBAAiB;AAClB,GA1BQ,EA0BN,CAACR,KAAK,CAACY,EAAP,CA1BM,CAAT;AA4BA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGR,WAAW,iBACV;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,qBAHJ;AAAA,kBADF;AAUD,CA5CD;;GAAML,O;UACUL,S,EAGGD,W;;;KAJbM,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport \"./Product.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport ProductCard from \"./ProductCard\";\nimport axios from \"../../Axios/axios\";\nimport UserContext from \"../../Context/userContext\";\nconst Product = () => {\n  const param = useParams();\n  const context = useContext(UserContext);\n  const { setStartupData, loadRazorpay, startupData } = context;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // getUserData();\n    if (!localStorage.getItem(\"token\")) {\n      navigate(\"/login\");\n    }\n    const fetchStartupsData = async () => {\n      try {\n        const response = await axios.post(\n          `/api/investor/fetch-startup`,\n          { startup_id: param.id },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        if (response.data.success) {\n          setStartupData(response.data.data);\n        }\n      } catch (error) {\n        console.log(error);\n        navigate(\"*\");\n      }\n    };\n    fetchStartupsData();\n  }, [param.id]);\n\n  return (\n    <>\n      <DashboardNavbar />\n      {startupData && (\n        <>\n          <ProductCard data={startupData}></ProductCard>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}